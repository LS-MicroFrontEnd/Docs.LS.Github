name: CI CD develop Component
on:
  push:
    branches:
      - develop

jobs:
  build_and_publish:
    name: build and publish
    runs-on: ubuntu-latest
    env:
     CONFIGURATION: Release
     OWNER_REPOSITORY: LS-MicroFrontEnd
     NAME_COMPONENT: ErrorHandling

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Semantic Version
      id: versionPkg
      uses: paulhatch/semantic-version@v5.0.2
      with:
        major_pattern: "!"
        minor_pattern: "feat"
        bump_each_commit: true
        version_format: "${major}.${minor}.${patch}-alpha"

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '5.0.x'

    - name: Display dotnet version
      run: dotnet --version

    - name: Set nuget source
      run: dotnet nuget add source https://nuget.pkg.github.com/${{env.OWNER_REPOSITORY}}/index.json -n LSPackages -u ${{env.OWNER_REPOSITORY}} -p ${{ secrets.NUGET_TOKEN }} --store-password-in-clear-text
  

    - name: Set VERSION variable
      id: getVersion
      run: echo "VERSION=${{steps.versionPkg.outputs.version}}" >> $GITHUB_ENV

    - name: Show version
      run: |
                echo $VERSION
                echo ${{ env.VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore ${{env.NAME_COMPONENT}}/${{env.NAME_COMPONENT}}.csproj
            
    - name: Build
      run: dotnet build ${{env.NAME_COMPONENT}}/${{env.NAME_COMPONENT}}.csproj --configuration ${{ env.CONFIGURATION }}  /p:Version=$VERSION  --no-restore

    - name: Push Component
      run: dotnet nuget push $GITHUB_WORKSPACE/${{env.NAME_COMPONENT}}/bin/Release/*.nupkg --source https://nuget.pkg.github.com/${{env.OWNER_REPOSITORY}}/index.json --api-key ${GITHUB_TOKEN}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

